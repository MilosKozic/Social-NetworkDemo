{"version":3,"sources":["accounts.jsx","home.jsx","navbar.jsx","user.jsx","App.js","service.js","index.js"],"names":["AllAccounts","accounts","setAccounts","useState","search","setSearch","className","type","placeholder","onChange","e","target","value","toLowerCase","filter","el","firstName","includes","map","to","surname","id","Home","Navbar","User","name","useParams","singleUser","directFriends","friends","x","friendsOFfriends","push","frOFfriends","Set","flat","friendsFriends","possibleFriends","suggestedFriends","forEach","element","arr1","concat","arr2","length","setFriends","fOFf","setfOFf","suggested","setSuggested","age","gender","onClick","console","log","App","useEffect","axios","get","then","res","data","catch","err","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGaA,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAE1B,GAFsD,EAAlBC,YAERC,mBAAS,KAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACI,iCACI,uBAAOC,UAAU,SAASC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAACC,GAC5EL,EAAUK,EAAEC,OAAOC,MAAMC,kBAE7B,qBAAKP,UAAU,QAAf,gBACKL,QADL,IACKA,OADL,EACKA,EAAUa,QAAO,SAAAC,GAAE,OAAIA,EAAGC,UAAUH,cAAcI,SAASb,MACvDc,KAAI,SAAAH,GAAE,OAAI,8BAAiB,eAAC,IAAD,CAAMI,GAAE,uBAAWJ,QAAX,IAAWA,OAAX,EAAWA,EAAIC,WAAvB,iBAAqCD,QAArC,IAAqCA,OAArC,EAAqCA,EAAIC,UAAU,uBAAnD,OAAyDD,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAIK,YAApEL,EAAGM,a,OCH7BC,EAXJ,WACP,OACI,sBAAKD,GAAG,OAAR,UACG,4DACA,sHACA,kHCSIE,EAZF,WACT,OACI,mCACA,gCACI,cAAC,IAAD,CAAMJ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,6B,QCgFGK,EAnFF,SAAC,GAAkB,IAAD,QAAfvB,EAAe,EAAfA,SACNwB,EAASC,cAATD,KACFE,EAAU,OAAG1B,QAAH,IAAGA,OAAH,EAAGA,EAAUa,QAAO,SAAAC,GAAE,OAAIA,EAAGC,WAAaS,KACpDG,EAAa,OAAG3B,QAAH,IAAGA,OAAH,EAAGA,EAAUa,QAAO,SAAAC,GAAE,uBAAIY,EAAW,UAAf,aAAI,EAAeE,QAAQZ,SAASF,EAAGM,OAE1ES,EAAIF,EAAcV,KAAI,SAAAH,GAAE,OAAIA,EAAGM,MAE/BU,EAAmB,GACvBH,EAAcV,KAAI,SAAAH,GAAE,OAAIgB,EAAiBC,KAAKjB,EAAGc,YACjD,IAAII,EAAW,YAAO,IAAIC,IAAIH,EAAiBI,SAI3CC,EAHWnC,EAASa,QAAO,SAAAC,GAAE,OAAIkB,EAAYhB,SAASF,EAAGM,OAEhCP,QAAO,SAAAC,GAAE,OAAKe,EAAEb,SAASF,EAAGM,OACtBP,QAAO,SAAAC,GAAE,OAAIA,EAAGM,IAAMM,EAAW,GAAGN,MAGnEgB,EADiBpC,EAASa,QAAO,SAAAC,GAAE,OAAKe,EAAEb,SAASF,EAAGM,OACrBP,QAAO,SAAAC,GAAE,OAAIA,EAAGM,IAAMM,EAAW,GAAGN,MAErEiB,EAAmB,GAGvBD,EAAgBE,SAAQ,SAAAC,GACpB,IAAIC,EAAOD,EAAQX,QAAQa,OAAOZ,GAC9Ba,EAAI,YAAO,IAAIT,IAAIO,IACnBA,EAAKG,OAASD,EAAKC,OAAS,GAC5BN,EAAiBN,KAAKQ,MAI9B,MAA8BrC,oBAAS,GAAvC,mBAAO0B,EAAP,KAAgBgB,EAAhB,KACA,EAAwB1C,oBAAS,GAAjC,mBAAO2C,EAAP,KAAaC,EAAb,KACA,EAAkC5C,oBAAS,GAA3C,mBAAO6C,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAK5B,GAAG,aAAR,UACI,sBAAMf,UAAU,aAAhB,UACC,8CAAgB,+CAAQqB,EAAW,UAAnB,aAAQ,EAAeX,gBACvC,8CAAgB,+CAAQW,EAAW,UAAnB,aAAQ,EAAeP,cACvC,yCAAW,yCAAOO,EAAW,UAAlB,aAAO,EAAeuB,SACjC,2CAAa,+CAAQvB,EAAW,UAAnB,aAAQ,EAAewB,gBAEtC,sBAAK7C,UAAU,KAAf,UACC,wBAAQe,GAAG,UAAU+B,QAAS,WAC1BP,GAAYhB,GACZkB,GAAQ,GACRE,GAAa,IAHjB,wBAMA,wBAAQ5B,GAAG,MAAM+B,QAAS,WACtBL,GAASD,GACTD,GAAW,GACXI,GAAa,IAHjB,gCAMA,wBAAQ5B,GAAG,YAAY+B,QAAS,WAC5BL,GAAQ,GACRF,GAAW,GACXI,GAAcD,IAHlB,kCAOQnB,EAAO,OACJD,QADI,IACJA,OADI,EACJA,EAAeV,KAAI,SAAAH,GAAE,OAAI,qBAAKT,UAAU,UAAf,SAAqC,cAAC,IAAD,CAAMa,GAAE,UAAKJ,EAAGC,WAAhB,SAA8BD,EAAGC,aAAxCD,EAAGM,OAEzDgC,QAAQC,IAAI,kBAGhBR,EAAI,OACAV,QADA,IACAA,OADA,EACAA,EAAgBlB,KAAI,SAAAH,GAAE,OAAI,qBAAKT,UAAU,MAAf,SAAiC,cAAC,IAAD,CAAMa,GAAE,UAAKJ,EAAGC,WAAhB,SAA8BD,EAAGC,aAAxCD,EAAGM,OAEvDgC,QAAQC,IAAI,mBAGhBN,EAAS,OACTV,QADS,IACTA,OADS,EACTA,EAAkBpB,KAAI,SAAAH,GAAE,OAAI,qBAAKT,UAAU,YAAf,SAAuC,cAAC,IAAD,CAAMa,GAAE,UAAKJ,EAAGC,WAAhB,SAA8BD,EAAGC,aAAxCD,EAAGM,OAE3DgC,QAAQC,IAAI,yBC9BrBC,MAtCf,WAEE,MAAgCpD,mBAAS,IAAzC,mBAAOF,EAAP,KAAiBC,EAAjB,KAWA,OATAsD,qBAAU,WCdgBC,IAAMC,IAAI,kEDevBC,MAAK,SAAAC,GACd1D,EAAY0D,EAAIC,SACfC,OAAM,SAAAC,GACPV,QAAQC,IAAIS,QAEb,IAID,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,8BACE,cAAC,EAAD,MAEF,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAajE,SAAUA,MAEzB,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,CAAMjE,SAAUA,EAAUC,YAAaA,SAG3C,kFEpCRiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b9b97cd2.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const AllAccounts = ({ accounts, setAccounts }) => {\r\n\r\n    const [search, setSearch] = useState('')\r\n\r\n    return (\r\n        <main>\r\n            <input className=\"search\" type=\"text\" placeholder=\"Search people...\" onChange={(e) => {\r\n                setSearch(e.target.value.toLowerCase())\r\n            }} />\r\n            <div className=\"users\">\r\n                {accounts?.filter(el => el.firstName.toLowerCase().includes(search))\r\n                    .map(el => <div key={el.id}><Link to={`users/${el?.firstName}`}>{el?.firstName}<br/>{el?.surname}</Link></div>)}\r\n            </div>\r\n        </main>\r\n    )\r\n}","const Home=()=>{\r\n    return(\r\n        <div id=\"home\">\r\n           <p>Welcome to MyBook Homepage!</p>\r\n           <p>The site is still under construction so we do not have option to register new members</p>\r\n           <p>By clicking on All Users you can see who is currently a member of our network</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import {Link} from 'react-router-dom'\r\n\r\nconst Navbar=()=>{\r\n    return(\r\n        <>\r\n        <nav>\r\n            <Link to='/'>Home</Link>\r\n            <Link to='/users'>All users</Link>        \r\n        </nav>\r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ accounts }) => {\r\n    let { name } = useParams()\r\n    let singleUser = accounts?.filter(el => el.firstName == name)\r\n    let directFriends = accounts?.filter(el => singleUser[0]?.friends.includes(el.id))\r\n\r\n    let x = directFriends.map(el => el.id)                             //direct friends id\r\n\r\n    let friendsOFfriends = []\r\n    directFriends.map(el => friendsOFfriends.push(el.friends))\r\n    let frOFfriends = [...new Set(friendsOFfriends.flat())]            //friends of friends id\r\n    let friendsF = accounts.filter(el => frOFfriends.includes(el.id))  //friends of friends\r\n\r\n    let friendsFriend = friendsF.filter(el => !x.includes(el.id))       \r\n    let friendsFriends = friendsFriend.filter(el => el.id != singleUser[0].id)   //friends of friends without direct friends \r\n\r\n    let possibleFriend = accounts.filter(el => !x.includes(el.id))\r\n    let possibleFriends = possibleFriend.filter(el => el.id != singleUser[0].id)\r\n   \r\n    let suggestedFriends = []\r\n\r\n    \r\n    possibleFriends.forEach(element => {\r\n        let arr1 = element.friends.concat(x)\r\n        let arr2 = [...new Set(arr1)]\r\n        if (arr1.length - arr2.length > 1) {\r\n            suggestedFriends.push(element)\r\n        }\r\n    });\r\n\r\n    const [friends, setFriends] = useState(false)\r\n    const [fOFf, setfOFf] = useState(false)\r\n    const [suggested, setSuggested] = useState(false)\r\n\r\n    return (\r\n        <div id=\"singleUser\">\r\n            <div  className=\"singleUser\">\r\n             <p> First name: <span> {singleUser[0]?.firstName}</span></p>           \r\n             <p> Last name:  <span> {singleUser[0]?.surname}</span></p>\r\n             <p> Age:   <span>{singleUser[0]?.age}</span></p>\r\n             <p> Gender:  <span> {singleUser[0]?.gender}</span></p>\r\n            </div>\r\n           <div className=\"bt\">\r\n            <button id=\"friends\" onClick={() => {\r\n                setFriends(!friends)\r\n                setfOFf(false)\r\n                setSuggested(false)\r\n            }}>My Friends</button>\r\n\r\n            <button id=\"fof\" onClick={() => {\r\n                setfOFf(!fOFf)\r\n                setFriends(false)\r\n                setSuggested(false)\r\n            }}>Friends of Friends</button>\r\n\r\n            <button id=\"suggested\" onClick={() => {\r\n                setfOFf(false)\r\n                setFriends(false)\r\n                setSuggested(!suggested)\r\n            }}>Suggested Friends</button>\r\n             </div>        \r\n                {\r\n                    friends ?\r\n                       directFriends?.map(el => <div className=\"friends\" key={el.id}><Link to={`${el.firstName}`}>{el.firstName}</Link></div>)\r\n                        :\r\n                        console.log('direct friends')\r\n                }\r\n                {\r\n                    fOFf ?\r\n                        friendsFriends?.map(el => <div className=\"fof\" key={el.id}><Link to={`${el.firstName}`}>{el.firstName}</Link></div>)\r\n                        :\r\n                        console.log('friends friends')\r\n                }\r\n                {\r\n                    suggested ?\r\n                    suggestedFriends?.map(el => <div className=\"suggested\" key={el.id}><Link to={`${el.firstName}`}>{el.firstName}</Link></div>)\r\n                        :\r\n                        console.log('suggested friends')\r\n                }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { getUsers } from './service.js'\nimport { AllAccounts } from './accounts.jsx'\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from 'react-router-dom'\nimport Home from './home.jsx'\nimport Navbar from './navbar.jsx'\nimport User from './user'\n\n\n\n\nfunction App() {\n\n  const [accounts, setAccounts] = useState([])\n\n  useEffect(() => {\n    getUsers().then(res => {\n      setAccounts(res.data)\n    }).catch(err=>{\n      console.log(err)\n    })\n  }, [])\n\n\n  return (\n    <HashRouter basename=\"/\">\n      <div >\n        <Navbar />\n      </div>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/users\">\n            <AllAccounts accounts={accounts} />\n          </Route>\n          <Route exact path=\"/users/:name\">\n            <User accounts={accounts} setAccounts={setAccounts} />\n          </Route>\n        </Switch>\n        <footer>\n        Copyright  &copy; Milos Kozić 2021\n        </footer>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\r\n\r\nexport const getUsers =()=> axios.get('https://my-json-server.typicode.com/MilosKozic/users-api/users')","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}